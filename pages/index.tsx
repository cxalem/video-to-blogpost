import Head from "next/head";
import Router from "next/router";
import { FormEvent, useRef } from "react";

export default function Home() {
  const inputRef = useRef<HTMLInputElement>(null);
  const audioRef = useRef<HTMLInputElement>(null);

  const audioData = {
    audio_url: audioRef.current?.files?.[0],
    language: "english",
    language_behaviour: "automatic single language",
  };

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();
    const urlRegex =
      /^(https?|ftp):\/\/(www\.)?[a-zA-Z0-9]+(\.[a-zA-Z]+)+([/?#]\S*)?$/;
    if (urlRegex.test(inputRef.current?.value as string)) {
      Router.push(`/api/download?url=${inputRef.current?.value}`);
      return;
    }
    alert("Invalid URL");
  };

  const handleAudioToText = async () => {
    const formData = new FormData();
    formData.append("audio_url", audioRef.current?.files?.[0]);
    formData.append("language", "english");
    formData.append("language_behaviour", "automatic single language");
    try {
      await fetch("https://api.gladia.io/audio/text/audio-transcription/", {
        mode: "no-cors",
        method: "POST",
        headers: {
          accept: "application/json",
          "x-gladia-key": "d183cbaa-483d-49a6-ac66-27f348b9517f",
          "Content-Type": "multipart/form-data",
        },
        body: formData,
      });
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={"w-full flex flex-col gap-6 items-center"}>
        <form
          onSubmit={handleSubmit}
          className="flex flex-col gap-4 mt-4 w-full max-w-md"
        >
          <input
            ref={inputRef}
            type="text"
            name="url"
            className="border py-2 px-6 rounded-md"
            placeholder="www.YouTubeVideo.com"
          />
          <input
            type={"file"}
            name={"audio"}
            className={"border py-2 px-6 rounded-md"}
            ref={audioRef}
          />
          <button className={"bg-red-800 text-red-200 px-10 py-2 rounded-md"}>
            Download
          </button>
        </form>
        <button
          onClick={handleAudioToText}
          className={
            "bg-red-800 text-red-200 px-10 py-2 rounded-md w-full max-w-md"
          }
        >
          Audio to Text
        </button>
      </main>
    </>
  );
}
